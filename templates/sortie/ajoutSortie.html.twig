{% extends 'base.html.twig' %}

{% block title %} {{ parent() }} | Ajout sortie {% endblock %}

{% block stylesheet %}

    {{ parent() }}

    <link rel="stylesheet" href="{{ asset('css/sortie.css') }}">

{% endblock %}

{% block body %}

    <div class="container">
        <div class="card row mt-5">
            {{ form_start(formSortie, { 'attr': {'class': 'form-inline mt-5', 'id': 'form_add_sortie'} }) }}

            {{ form_errors(formSortie) }}

            <div class="col-sm-6">
                <div class="col-sm-12">
                    <div class="form-group mb-3 ">
                        <label for="sortie_nom" class="col-sm-5 col-form-label justify-content-end ">
                            Nom
                            <span class="required">*</span>
                        </label>
                        <div class="col-sm-7">
                            {{ form_widget(formSortie.nom, { 'attr': {'id': 'sortie_nom'} }) }}
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group mb-3">
                        <label for="sortie_dateDebut" class="col-sm-5 col-form-label justify-content-end">
                            Date de début
                            <span class="required">*</span>
                        </label>
                        <div class="col-sm-7">
                            {{ form_widget(formSortie.dateDebut, { 'attr': {'id': 'sortie_dateDebut'} }) }}
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group mb-3">
                        <label for="sortie_dateCloture" class="col-sm-5 col-form-label justify-content-end">
                            Date de cloture
                            <span class="required">*</span>
                        </label>
                        <div class="col-sm-7">
                            {{ form_widget(formSortie.dateCloture, { 'attr': {'id': 'sortie_dateCloture'} }) }}
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group mb-3">
                        <label for="sortie_duree" class="col-sm-5 col-form-label justify-content-end">
                            Durée de l'évènement
                            <span class="required">*</span>
                        </label>
                        <div class="col-sm-7">
                            {{ form_widget(formSortie.duree, { 'attr': {'id': 'sortie_duree'} }) }}
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group mb-3">
                        <label for="sortie_description" class="col-sm-5 col-form-label justify-content-end">
                            Description
                            <span class="required">*</span>
                        </label>
                        <div class="col-sm-7">
                            {{ form_widget(formSortie.descriptionInfo, { 'attr': {'id': 'sortie_descriptionInfo'} }) }}
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group mb-3">
                        <label for="sortie_nombreInscriptionsMax" class="col-sm-7 col-form-label justify-content-end">
                            Nombre d'inscriptions maximum
                            <span class="required">*</span>
                        </label>
                        <div class="col-sm-5">
                            {{ form_widget(formSortie.nombreInscriptionsMax, { 'attr': {'id': 'sortie_nombreInscriptionsMax'} }) }}
                        </div>
                    </div>
                </div>
            </div>

            <div class='col-sm-6'>
                <div class="col-sm-12">
                    <div class="form-group mb-3">
                        <label for="sortie_campus_organisateur" class="col-sm-6 col-form-label justify-content-end">
                            Campus organisateur :
                        </label>
                        <div class="col-sm-6">
                            {{  campusName }}
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group mb-3">
                        <label for="sortie_lieu" class="col-sm-6 col-form-label justify-content-end">
                            Lieu de l'évenement
                            <span class="required">*</span>
                        </label>
                        <div class="col-sm-6">
                            {{ form_widget(formSortie.lieu, { 'attr': {'id': 'sortie_lieu', 'placeholder': 'Lieu de l\'évenement'} }) }}
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-6 col-form-label justify-content-end">Vous ne trouver pas le lieu ?</label>
                        <div class="col-sm-6">
                            <button type="button" class="btn btn_custom_secondary" onclick="getModaleLieu(-1)">Ajouter</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="m-auto">
                {{ form_widget(formSortie.enregister) }}
            </div>

            {{ form_end(formSortie) }}
        </div>
    </div>

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script>

        let champ = ['#sortie_nom','#sortie_dateDebut','#sortie_dateCloture','#sortie_duree','#sortie_descriptionInfo','#sortie_nombreInscriptionsMax','#sortie_lieu']
        getCookie();

        function getModaleLieu(id) {
            $routeGetModaleLieu = '{{ path('get_modale_lieu') }}';
            $.ajax({
                url: $routeGetModaleLieu,
                data: {
                    idLieu: id
                },
                type: 'GET',
                success: function (data) {
                    $(data).modal();
                }
            });
        }

        function setCookie() {
            let value = '{';
            let first = true
            champ.forEach( x =>{
                if (!first){
                    value = value + ','
                }
                value =  value + '"' + x + '"' + ' : ' + '"' + $(x).val().toString() + '"';
                first = false;
            })
            value =  value + '}';
            var d = new Date();
            d.setTime(d.getTime() + (60 * 2000));
            console.log(d);
            var expires = "expires="+ d.toUTCString();
            document.cookie = "champ =" + value + ";" + expires + ";path=/";
        }

        function getCookie() {
            var cookieArr = document.cookie.split(";");

            // Loop through the array elements
            for(var i = 0; i < cookieArr.length; i++) {
                var cookiePair = cookieArr[i].split("=");

                /* Removing whitespace at the beginning of the cookie name
                and compare it with the given string */
                if('champ' == cookiePair[0].trim()) {
                    // Decode the cookie value and return
                    setForm(decodeURIComponent(cookiePair[1]));
                }
            }
            document.cookie = "champ = \"\" ; -1 ;path=/";
        }
        function setForm(json){
            let object = JSON.parse(json);
            Object.keys(object).forEach(x => {
                $(x).val(object[x]);
            })
        }
    </script>

{% endblock %}