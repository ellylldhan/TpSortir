security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    our_db_provider:
      entity:
        class: App\Entity\Participant
        property: pseudo
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
      provider: our_db_provider
      anonymous: ~
      form_login:
        login_path: login
        check_path: login
        csrf_token_generator: security.csrf.token_manager
        username_parameter: "login_form[pseudo]"
        password_parameter: "login_form[password]"
      logout:
        path: logout
        target: base
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator
    main:
      pattern: ^/
      provider: our_db_provider
      anonymous: ~
      form_login:
        login_path: login
        check_path: login
        csrf_token_generator: security.csrf.token_manager
#        username_parameter: "login_form[pseudo]"
#        password_parameter: "login_form[password]"
      logout:
        path: logout
        target: base
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  #    - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }
  encoders:
    App\Entity\Participant:
      algorithm: bcrypt
